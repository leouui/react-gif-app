{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifItem.js","components/Category.js","GifApp.js","index.js"],"names":["AddCategory","setcategories","useState","txtvalue","setvalue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","placeholder","getGifs","category","a","fetch","encodeURI","r","json","data","results","map","id","url","images","downsized_large","title","console","log","require","useEffect","GifItem","columnsCount","src","alt","Category","loading","state","setstate","useFetchGifs","Arrgifs","columnsCountBreakPoints","gifs","GifApp","categories","c","root","document","getElementById","reactDOM","render"],"mappings":"kNAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OAAO,mCACD,uBAAMC,SAPU,SAACC,GACnBA,EAAEC,iBAC4B,IAA3BJ,EAASK,OAAOC,QAAcR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAgBO,OACnEN,EAAS,KAIwBO,UAAU,0CAAzC,UACE,uBAAOC,KAAK,OAAOC,MAAOV,EAAUW,SAVxB,SAAC,GAAD,IAAUD,EAAV,EAAEE,OAAQF,MAAV,OAAsBT,EAASS,IAUkBG,YAAY,eAAgBL,UAAU,0BACnG,wBAAQA,UAAU,aAAlB,0B,+BCjBNM,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,+EAEQC,MAAM,mFAAD,OAAoFC,UAAUH,GAA9F,eAFb,cAEFI,EAFE,gBAGaA,EAAEC,OAHf,uBAGDC,EAHC,EAGDA,KACDC,EAAUD,EAAKE,KAAI,kBAA8C,CAAEC,GAAhD,EAAEA,GAAiDC,IAAnD,EAAKC,OAAQC,gBAAiBF,IAAyBG,MAAvD,EAAoCA,UAJrD,kBAMDN,GANC,kCASRO,QAAQC,IAAR,MATQ,0DAAH,sDCEb,EAAgCC,EAAQ,GAAhChC,EAAR,EAAQA,SAAUiC,EAAlB,EAAkBA,U,gBCAZC,EAAU,SAAC,GAAiB,IAAhBR,EAAe,EAAfA,IAAIG,EAAW,EAAXA,MAElB,OACI,cAAC,IAAD,CAASM,aAAc,EAAG1B,UAAU,WAApC,SACI,qBAAKA,UAAU,QAAQ2B,IAAKV,EAAKW,IAAKR,OCF5CS,EAAW,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SACf,EFDiB,SAACA,GAClB,MAA0BhB,EAAS,CAC/BsB,KAAK,GACLiB,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAR,GAAU,WACN,sBAAC,sBAAAhB,EAAA,kEACGwB,EADH,SAEmB1B,EAAQC,GAF3B,yBAEOM,KAFP,KAGOiB,SAAQ,IAHf,wDAAD,KAOD,CAACvB,IAGGwB,EEhBwBE,CAAa1B,GAAhC2B,EAAZ,EAAOrB,KAAaiB,EAApB,EAAoBA,QAGpB,OACI,sBAAK9B,UAAU,gBAAf,UACI,qBAAKA,UAAU,QAAf,cAAyBO,EAAzB,OAGQuB,GAAW,oDAIX,cAAC,IAAD,CAAmBK,wBAXH,CAAE,IAAK,EAAG,IAAK,EAAG,IAAK,GAW+BnC,UAAU,qEAAhF,SAESkC,EAAQnB,KAAI,SAACqB,GAAD,OAAU,cAAC,EAAD,eAA6BA,GAAdA,EAAKpB,aCdjEqB,EAAS,WAEX,MAAoC9C,mBAAS,IAA7C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAEA,OAAO,qCACH,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,qBAAKU,UAAU,yBAAf,SAEQ,qBAAKA,UAAU,uCAAf,SAEQsC,EAAWvB,KAAI,SAACwB,GAAD,OACX,cAAC,EAAD,CAAuBhC,SAAUgC,GAAjC,UAAkBA,eCbxCC,EAAOC,SAASC,eAAe,QAGrCC,IAASC,OAAO,cAAC,EAAD,IAAUJ,K","file":"static/js/main.cd11e4ab.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n    const [txtvalue,setvalue] = useState(\"\")\r\n\r\n    const changeValue = ({target:{value}}) => setvalue(value)\r\n\r\n    const addCategories = (e) => {\r\n        e.preventDefault()\r\n        if(txtvalue.trim().length !== 0) setcategories(cats=> [txtvalue,...cats])\r\n        setvalue(\"\")\r\n    }\r\n\r\n    return <>\r\n          <form onSubmit={addCategories} className=\"w_100 d_flex search_container fx_center\">\r\n            <input type=\"text\" value={txtvalue} onChange={ changeValue } placeholder=\"Busca un gif\"  className=\"search_input maxW_100\" />     \r\n            <button className=\"button_add\">Buscar</button>            \r\n        </form>\r\n    </>\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport {\r\n    AddCategory\r\n}","const getGifs = async (category) => {\r\n    try {\r\n        const r = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=LErINR7NeVcFm1lO0u10tYXBPKFIu2mg&q=${encodeURI(category)}&limit=10 `)\r\n        const {data} = await r.json()\r\n        const results = data.map(({id,images:{downsized_large:{url}},title})=>({ id,url,title }))\r\n    \r\n        return results \r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\nexport {\r\n    getGifs\r\n}","import { getGifs } from \"../helpers/getGifs\"\r\n\r\nconst { useState, useEffect } = require(\"react\")\r\n\r\nconst useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        (async function(){\r\n            setstate({\r\n                data: await getGifs(category),\r\n                loading:false,\r\n            })\r\n        })()\r\n\r\n    }, [category])\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport {\r\n    useFetchGifs\r\n}","import Masonry from \"react-responsive-masonry\"\r\n\r\nconst GifItem = ({url,title}) => {\r\n\r\n    return (\r\n        <Masonry columnsCount={1} className=\"gif_item\">\r\n            <img className=\"w_100\" src={url} alt={title}/>\r\n        </Masonry>\r\n    )\r\n}\r\n\r\nexport {\r\n    GifItem\r\n}","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifItem } from './GifItem';\r\nimport ResponsiveMasonry from \"react-responsive-masonry\"\r\n\r\nconst Category = ({category}) => {\r\n    const {data:Arrgifs,loading} = useFetchGifs(category)\r\n    const columnsCountBreakPoints = { 350: 1, 750: 2, 900: 2 };\r\n\r\n    return (\r\n        <div className=\"category_item\">\r\n            <h1  className=\"title\"> {category} </h1> \r\n\r\n                {\r\n                    loading && <p>*Musica de acensor*</p>\r\n                }\r\n                \r\n                {\r\n                    <ResponsiveMasonry columnsCountBreakPoints={columnsCountBreakPoints}  className=\"container_gifs d_grid w_100 animate__animated animate__slideInDown\">\r\n                        {\r\n                             Arrgifs.map((gifs)=>  <GifItem  key={gifs.id}  {...gifs} /> )\r\n                        }\r\n                    </ResponsiveMasonry>     \r\n                }    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Category\r\n}","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport { Category } from \"./components/Category\"\r\n\r\n\r\nconst GifApp = () => {\r\n    \r\n    const [categories, setcategories] = useState([])\r\n\r\n    return <>\r\n        <AddCategory setcategories={setcategories} />\r\n        <hr/>\r\n\r\n        <div className=\"w_100 d_flex fx_center\">\r\n            {\r\n                <div className=\"container_categories w_page maxW_100\">\r\n                    {\r\n                        categories.map((c)=> \r\n                            <Category key={`${c}`} category={c}/>)\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n       \r\n    </>\r\n}\r\n\r\nexport {\r\n    GifApp\r\n}","import reactDOM from 'react-dom'\nimport \"./styles.css\"\nimport \"./tools.css\"\nimport {GifApp} from \"./GifApp\"\n\nconst root = document.getElementById(\"root\")\n//shallow test enzyme\n\nreactDOM.render(<GifApp/>,root)\n"],"sourceRoot":""}